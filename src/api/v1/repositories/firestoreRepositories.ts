import { db } from "../../../config/firebaseConfig";
import {
    DocumentReference,
    QuerySnapshot,
    Transaction,
    Firestore,
} from "firebase-admin/firestore";

// CREATE EMPLOYEE
// This function creates a new document in the 'employees' collection
export const createEmployee = async (): Promise<void> => {
    // Create a new document with a unique ID automatically generated by Firestore
    const docRef: DocumentReference = db.collection("employees").doc();

    // Use the `set` method to add data to the document
    await docRef.set({
        id: 1,
        name: "Alice Johnson",
        position: "Branch Manager",
        department: "Management",
        email: "alice.johnson@pixell-river.com",
        phone: "604-555-0148",
        branchId: 1
    });

    console.log("Employee document added successfully");
};

// READ EMPLOYEE BY ID
// This function retrieves a specific employee using their document ID
export const getEmployeeById = async (id: string): Promise<void> => {
    const docRef: DocumentReference = db.collection("employees").doc(id);

    // Use `get()` to fetch the document
    const doc = await docRef.get();

    if (doc.exists) {
        console.log("Employee data:", doc.data());
    } else {
        console.log("No such employee!");
    }
};

// READ ALL EMPLOYEES
// This function retrieves all employees in the collection
export const getAllEmployees = async (): Promise<void> => {
    const snapshot: QuerySnapshot = await db.collection("employees").get();

    // Loop through each document and print its data
    snapshot.forEach((doc) => {
        console.log(doc.id, "=>", doc.data());
    });
};

// UPDATE EMPLOYEE //
// This function updates an employee document by ID //
export const updateEmployee = async (id: string): Promise<void> => {
    const docRef: DocumentReference = db.collection("employees").doc(id);

    // Use `update()` to change specific fields //
    await docRef.update({
        position: "Branch Manager",
    });

    console.log("document updated successfully");
};

// DELETE EMPLOYEE //
// This function deletes an employee document by ID //
export const deleteEmployee = async (id: string): Promise<void> => {
    const docRef: DocumentReference = db.collection("employees").doc(id);

    // Use `delete()` to remove the document //
    await docRef.delete();

    console.log("document deleted successfully");
};

// TRANSACTION EXAMPLE
// This demonstrates how to run a transaction on Firestore
export const runEmployeeTransaction = async (): Promise<void> => {
    try {
        await db.runTransaction(async (transaction: Transaction) => {
            const docRef: DocumentReference = db
                .collection("employees")
                .doc("employee1");

            // Get the current employee document
            const doc = await transaction.get(docRef);

            if (!doc.exists) {
                throw new Error("Employee document does not exist");
            }

            const currentYears = doc.data()!.yearsOfExperience || 0;
            const newYears = currentYears + 1;

            // Updating the document inside transaction //
            transaction.update(docRef, { yearsOfExperience: newYears });
        });

        console.log("Transaction completed successfully");
    } catch (error: unknown) {
        const errorMessage =
            error instanceof Error ? error.message : "Unknown error";
        throw new Error(`Transaction failed: ${errorMessage}`);
    }
};
